{"version":3,"file":"Selector.jsx","sourceRoot":"","sources":["Selector.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAW7D,MAAM,CAAC,OAAO,UAAU,QAAQ,CAAC,EAC/B,MAAM,EACN,UAAU,EACV,QAAQ,EACR,UAAU,GACI;IACd,MAAM,aAAa,GAAG,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;IACzC,OAAO,CACL,CAAC,IAAI,CACH,CAAC,CAAC,MAAM,CACR,QAAQ,CAAC,UAAU,CACnB,cAAc,CAAC,QAAQ,CACvB,MAAM,CAAC,MAAM,CACb,MAAM,CAAC,IAAI,CAEX;MAAA,CAAC,MAAM,CACL,UAAU,CAAC,MAAM,CACjB,CAAC,CAAC,CAAC,aAAa,CAAC,CACjB,GAAG,CAAC,CAAC,CAAC,CAAC,CACP,cAAc,CAAC,QAAQ,CAEvB;QAAA,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,KAAK;YAC5B,OAAO,CACL,CAAC,GAAG,CACF,GAAG,CAAC,CAAC,KAAK,CAAC,CACX,UAAU,CAAC,MAAM,CACjB,KAAK,CAAC,MAAM,CACZ,OAAO,CAAC,CAAC,SAAS,WAAW;oBAC3B,IAAI,UAAU,KAAK,KAAK,EAAE,CAAC;wBACzB,QAAQ,CAAC,KAAK,GAAG,UAAU,CAAC,CAAC;wBAC7B,UAAU,EAAE,CAAC;oBACf,CAAC;gBACH,CAAC,CAAC,CAEF;cAAA,CAAC,MAAM,CACL;gBAAA,CAAC,GAAG,CACF,QAAQ,CAAC,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,CAC3C,MAAM,CAAC,SAAS,CAChB,UAAU,CAAC,KAAK,CAChB,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAE3B;kBAAA,CAAC,KAAK,KAAK,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CACnC;gBAAA,EAAE,GAAG,CACP;cAAA,EAAE,MAAM,CACV;YAAA,EAAE,GAAG,CAAC,CACP,CAAC;QACJ,CAAC,CAAC,CACJ;MAAA,EAAE,MAAM,CACV;IAAA,EAAE,IAAI,CAAC,CACR,CAAC;AACJ,CAAC","sourcesContent":["import React from \"react\";\n\nimport { Box, Center, Flex, HStack } from \"@chakra-ui/react\";\n\nimport { ImageItem } from \"./types\";\n\ninterface SelectorProps {\n  images: ImageItem[];\n  imageIndex: number;\n  paginate: (offset: number) => void;\n  resetTimer: () => void;\n}\n\nexport default function Selector({\n  images,\n  imageIndex,\n  paginate,\n  resetTimer,\n}: SelectorProps) {\n  const selectorWidth = images.length * 32;\n  return (\n    <Flex\n      w=\"100%\"\n      position=\"absolute\"\n      justifyContent=\"center\"\n      bottom=\"20px\"\n      zIndex=\"10\"\n    >\n      <HStack\n        fontWeight=\"bold\"\n        w={selectorWidth}\n        gap={2}\n        justifyContent=\"center\"\n      >\n        {images.map(function (_, index) {\n          return (\n            <Box\n              key={index}\n              fontWeight=\"bold\"\n              color=\"gray\"\n              onClick={function handleClick() {\n                if (imageIndex !== index) {\n                  paginate(index - imageIndex);\n                  resetTimer();\n                }\n              }}\n            >\n              <Center>\n                <Box\n                  fontSize={{ base: \"0.5rem\", md: \"0.8rem\" }}\n                  cursor=\"pointer\"\n                  transition=\".3s\"\n                  _hover={{ color: \"white\" }}\n                >\n                  {index === imageIndex ? \"○\" : \"●\"}\n                </Box>\n              </Center>\n            </Box>\n          );\n        })}\n      </HStack>\n    </Flex>\n  );\n}\n"]}